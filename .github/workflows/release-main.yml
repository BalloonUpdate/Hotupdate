on:
  push:
    tags: 
      - "v*"

jobs:
  build:
    runs-on: windows-2019
    steps:
      - name: Prepare
        run: tzutil /s "China Standard Time"
        
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Load Cache
        uses: actions/cache@v2
        with: 
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}

      - name: Check Out TagName
        id: checkout-tagname
        shell: "python3 {0}"
        run: |
          import os
          import re
          ref = os.getenv('GITHUB_REF', '')
          match = re.search(r'refs\/tags\/(.*)', ref)
          tag_name = match[1] if match is not None else ''
          print('::set-output name=tag_name::'+tag_name)
        
      - name: Build
        env: 
          tag_name: ${{ steps.checkout-tagname.outputs.tag_name }}
        run: |
          python -m pip install wheel setuptools
          python -m pip install -r requirements.txt
          Copy-Item ci\fix\hook-cefpython3.py C:\hostedtoolcache\windows\Python\3.7.9\x64\Lib\site-packages\PyInstaller\hooks
          python ci\generate_version_file.py
          C:\hostedtoolcache\windows\Python\3.7.9\x64\Scripts\pyinstaller --noconfirm --version-file version-file.txt --add-binary="icon.ico;." --add-binary="build-info.json;."  --add-binary="assets;assets" --add-binary="v4.0.30319;dotnet" -i icon.ico -F -w -n UpdaterHotupdatePackage main.py
          Copy-Item updater.settings.exam.json dist\
          dir

      - name: Print Hashes
        env: 
          tag_name: ${{ steps.checkout-tagname.outputs.tag_name }}
        run: |
          python ci\version.py both
          echo "---------------------------"
          echo "MD5 for dist\UpdaterHotupdatePackage.exe:"
          python ci\sha1.py dist\UpdaterHotupdatePackage.exe
          echo "SHA1 for dist\UpdaterHotupdatePackage.exe:"
          python ci\md5.py dist\UpdaterHotupdatePackage.exe
      
      - name: Upload To Github Release
        uses: xresloader/upload-to-github-release@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          file: dist/*
          draft: false
          tags: true        
